// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.30.0

package db

import (
	"database/sql"
	"time"

	"github.com/sqlc-dev/pqtype"
)

type Account struct {
	ID          int32                 `json:"id"`
	Email       string                `json:"email"`
	Username    string                `json:"username"`
	Password    string                `json:"password"`
	IsBlock     bool                  `json:"is_block"`
	Ua          string                `json:"ua"`
	CreatedAt   time.Time             `json:"created_at"`
	UpdatedAt   time.Time             `json:"updated_at"`
	Cookies     pqtype.NullRawMessage `json:"cookies"`
	AccessToken sql.NullString        `json:"access_token"`
	ProxyID     sql.NullInt32         `json:"proxy_id"`
}

type Category struct {
	ID          int32          `json:"id"`
	Name        string         `json:"name"`
	Description sql.NullString `json:"description"`
	CreatedAt   time.Time      `json:"created_at"`
	UpdatedAt   time.Time      `json:"updated_at"`
}

type Comment struct {
	ID         int32     `json:"id"`
	Content    string    `json:"content"`
	IsAnalyzed bool      `json:"is_analyzed"`
	CreatedAt  time.Time `json:"created_at"`
	InsertedAt time.Time `json:"inserted_at"`
	PostID     int32     `json:"post_id"`
	AuthorID   int32     `json:"author_id"`
	CommentID  string    `json:"comment_id"`
}

type Config struct {
	ID    int32  `json:"id"`
	Key   string `json:"key"`
	Value string `json:"value"`
}

type EmbeddedProfile struct {
	ID        int32        `json:"id"`
	Pid       int32        `json:"pid"`
	CreatedAt sql.NullTime `json:"created_at"`
	Embedding interface{}  `json:"embedding"`
}

type GeminiKey struct {
	ID        int32        `json:"id"`
	ApiKey    string       `json:"api_key"`
	TokenUsed int64        `json:"token_used"`
	UpdatedAt sql.NullTime `json:"updated_at"`
}

type GooseDbVersion struct {
	ID        int32     `json:"id"`
	VersionID int64     `json:"version_id"`
	IsApplied bool      `json:"is_applied"`
	Tstamp    time.Time `json:"tstamp"`
}

type Group struct {
	ID        int32         `json:"id"`
	GroupID   string        `json:"group_id"`
	GroupName string        `json:"group_name"`
	IsJoined  bool          `json:"is_joined"`
	AccountID sql.NullInt32 `json:"account_id"`
	ScannedAt sql.NullTime  `json:"scanned_at"`
}

type GroupCategory struct {
	GroupID    int32     `json:"group_id"`
	CategoryID int32     `json:"category_id"`
	CreatedAt  time.Time `json:"created_at"`
}

type Log struct {
	ID          int32          `json:"id"`
	AccountID   sql.NullInt32  `json:"account_id"`
	Action      string         `json:"action"`
	TargetID    sql.NullInt32  `json:"target_id"`
	Description sql.NullString `json:"description"`
	CreatedAt   sql.NullTime   `json:"created_at"`
}

type Post struct {
	ID         int32        `json:"id"`
	PostID     string       `json:"post_id"`
	Content    string       `json:"content"`
	CreatedAt  time.Time    `json:"created_at"`
	InsertedAt time.Time    `json:"inserted_at"`
	GroupID    int32        `json:"group_id"`
	IsAnalyzed bool         `json:"is_analyzed"`
	ScannedAt  sql.NullTime `json:"scanned_at"`
}

type Prompt struct {
	ID          int32     `json:"id"`
	Content     string    `json:"content"`
	ServiceName string    `json:"service_name"`
	Version     int32     `json:"version"`
	CreatedBy   string    `json:"created_by"`
	CreatedAt   time.Time `json:"created_at"`
	CategoryID  int32     `json:"category_id"`
}

type Proxy struct {
	ID        int32     `json:"id"`
	Ip        string    `json:"ip"`
	Port      string    `json:"port"`
	Username  string    `json:"username"`
	Password  string    `json:"password"`
	IsActive  bool      `json:"is_active"`
	CreatedAt time.Time `json:"created_at"`
	UpdatedAt time.Time `json:"updated_at"`
}

type Request struct {
	ID           int32          `json:"id"`
	Progress     float64        `json:"progress"`
	Status       int16          `json:"status"`
	Description  sql.NullString `json:"description"`
	CreatedAt    sql.NullTime   `json:"created_at"`
	UpdatedAt    sql.NullTime   `json:"updated_at"`
	ErrorMessage sql.NullString `json:"error_message"`
}

type UserProfile struct {
	ID                 int32           `json:"id"`
	FacebookID         string          `json:"facebook_id"`
	Name               sql.NullString  `json:"name"`
	Bio                sql.NullString  `json:"bio"`
	Location           sql.NullString  `json:"location"`
	Work               sql.NullString  `json:"work"`
	Education          sql.NullString  `json:"education"`
	RelationshipStatus sql.NullString  `json:"relationship_status"`
	CreatedAt          time.Time       `json:"created_at"`
	UpdatedAt          time.Time       `json:"updated_at"`
	ScrapedByID        int32           `json:"scraped_by_id"`
	IsScanned          bool            `json:"is_scanned"`
	Hometown           sql.NullString  `json:"hometown"`
	Locale             string          `json:"locale"`
	Gender             sql.NullString  `json:"gender"`
	Birthday           sql.NullString  `json:"birthday"`
	Email              sql.NullString  `json:"email"`
	Phone              sql.NullString  `json:"phone"`
	ProfileUrl         string          `json:"profile_url"`
	IsAnalyzed         sql.NullBool    `json:"is_analyzed"`
	GeminiScore        sql.NullFloat64 `json:"gemini_score"`
	ModelScore         sql.NullFloat64 `json:"model_score"`
}

type UserProfileCategory struct {
	UserProfileID int32     `json:"user_profile_id"`
	CategoryID    int32     `json:"category_id"`
	CreatedAt     time.Time `json:"created_at"`
}
